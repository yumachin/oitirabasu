// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  // 認証システムで使用するid
  auth_id   String    @unique
  email     String    @unique
  // session情報がnullにならないためのオプショナルチェーン
  name      String?
  posts     Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  db_id     Int
  createdAt DateTime @default(now())
  // @updatedAt: 自動的に最新の更新日時を設定
  updatedAt DateTime? @updatedAt
  stars     Int
  title     String
  content   String
  // author: User { id: 1, name: "中井裕麻", email: "yuma@yuma.com" } が格納
  // @relation: 他テーブルとのリレーションを設定
  // fields:　リレーションの外部キーを指定
  // references: [id]： Userモデルのidフィールドを参照
  // CommentのauthorId = Userモデルのidの時、そのUserが投稿のauthorであると判断
  // ユーザーが削除された時を考慮して？を付与
  author    User?    @relation(fields: [authorId], references: [id])
  // 投稿する時に、ログイン情報からUserモデルのidを代入
  authorId  Int?
}